{"version":3,"sources":["helpers.js","components/Trip.js","components/App.js","registerServiceWorker.js","index.js"],"names":["pad0","n","getTime","date","d","Date","getHours","getMinutes","map","join","getISODate","getUTCFullYear","getUTCMonth","getUTCDate","isPastTrip","t","d2","hour","arguments","length","undefined","min","sec","getFullYear","getMonth","getDate","hmsToDate","Trip","_this$props","this","props","stations","isCurrent","ignoreStations","time","replace","isDone","split","i","Number","filteredStations","filter","st","indexOf","station","react_default","a","createElement","className","concat","React","PureComponent","getPeriodFromDates","dates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","da","value","_map","start","end","reverse","_map2","Object","slicedToArray","s1","s2","_map3","s","construct","toConsumableArray","_map4","d1","type","err","return","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","store","get","state","campus","period","currentPeriod","nextCampus","bind","assertThisInitialized","nextPeriod","updateTime","_this2","fetch","then","res","json","set","setState","campi","periods","_this$state","trips","str","isCurrentPeriod","myCampus","myTrips","sort","t1","t2","_map5","_map6","h1","h2","_map7","h","_map8","p1","p2","onClick","style","lineHeight","charAt","toUpperCase","slice","id","lib","svg","text","trip","components_Trip","key","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_components_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.89e9cc23.chunk.js","sourcesContent":["export function pad0(n) {  // padding with 0\n  return n > 9 ? n : '0' + n;\n}\n\nexport function getTime(date) {\n  const d = date || new Date();\n  return [d.getHours(), d.getMinutes()].map(pad0).join(':');\n}\n\nexport function getISODate(date) {\n  const d = date || new Date();\n  return [d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate()].map(pad0).join('-');\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function hmsToDate(hour = 0, min = 0, sec = 0) {\n  const d = new Date();\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), hour, min, sec);\n}\n\nexport function isPastTrip(t) {\n  const d = new Date();\n  const d2 = hmsToDate(t[0], t[1]);\n  return d > d2;\n}\n\nexport function splitTime(timeString) {\n  return timeString.split(/:|\\./g).map(i => Number(i));\n}","import React from 'react';\nimport { isPastTrip } from '../helpers';\n\nclass Trip extends React.PureComponent {\n  render() {\n    const { stations, isCurrent } = this.props;\n    const ignoreStations = ['PraÃ§a de Londres', 'Sete-Rios'];\n\n    // find past trips\n    const time = stations[0].hour.replace(/\\./g, ':');\n    const isDone = isPastTrip(time.split(':').map(i => Number(i)));\n\n    // create trip-stops string\n    const filteredStations = stations\n      .filter(st => ignoreStations.indexOf(st.station) === -1)\n      .map(st => st.station)\n      .join(' > ')\n      .replace(/Taguspark/g, 'Tagus');\n\n    return (\n      <div className={`card${isDone && isCurrent ? ' done' : ''}`}>\n        <span className={'entry'}>\n          <strong>{time}</strong> {filteredStations}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Trip;\n","import React from 'react';\nimport store from 'store';\nimport { Twemoji } from 'react-emoji-render';\nimport Trip from './Trip';\nimport './App.css';\nimport { capitalize, getTime, getISODate, isPastTrip, splitTime } from '../helpers';\n\nconst URL = 'https://web.tecnico.ulisboa.pt/~ist178013/api/shuttle/';\n\nfunction getPeriodFromDates(dates) {\n  const date = new Date();\n\n  for (const da of dates) {\n    const [s1, s2] = [da.start, da.end].map(d => d.split('/').reverse().map(d => Number(d)));\n    s1[1]--;\n    s2[1]--;\n    const [d1, d2] = [s1, s2].map(s => new Date(...s));\n    if (date >= d1 && date <= d2) return da.type;\n  }\n\n  return 'weekend';\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const data = store.get('data');\n\n    this.state = {\n      date: getISODate(),\n      time: getTime(),\n      campus: 'Taguspark',\n      period: 'weekday',\n      currentPeriod: undefined,\n      data: data || undefined,\n    };\n\n    this.nextCampus = this.nextCampus.bind(this);\n    this.nextPeriod = this.nextPeriod.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n  }\n\n  componentDidMount() {\n    const { data } = this.state;\n\n    if (data === undefined) {\n      fetch(URL)\n        .then((res) => res.json())\n        .then((data) => {\n          const period = getPeriodFromDates(data.date);\n          store.set('data', data);\n          this.setState({ data, period, currentPeriod: period });\n        });\n    } else {\n      const period = getPeriodFromDates(data.date);\n      this.setState({ period, currentPeriod: period });\n    }\n  }\n\n  nextCampus() {\n    const { campus } = this.state;\n    const campi = ['Taguspark', 'Alameda'];\n    const i = ((campi.indexOf(campus) || 0) + 1) % campi.length;\n\n    this.setState({ campus: campi[i] });\n  }\n\n  nextPeriod() {\n    const { period } = this.state;\n    const periods = ['weekday', 'holidays', 'exams'];\n    const i = ((periods.indexOf(period) || 0) + 1) % periods.length;\n\n    this.setState({ period: periods[i] });\n  }\n\n  updateTime() {\n    this.setState({ time: getTime() });\n  }\n\n  render() {\n    const { data, time, campus, period, currentPeriod } = this.state;\n    if (!data) return null;\n\n    const { trips } = data;\n    if (!trips) return null;\n\n    const isCurrentPeriod = period === currentPeriod;\n    const myCampus = (campus === 'Taguspark') ? 'Tagus\\nAlameda' : 'Alameda\\nTagus';\n    const myTrips = trips.filter(t => t.type === period && t.stations[0].station === campus);\n\n    if (isCurrentPeriod) {\n      myTrips.sort((t1, t2) => {\n        const [h1, h2] = [t1, t2].map(t => splitTime(t.stations[0].hour));\n        const [p1, p2] = [h1, h2].map(h => isPastTrip(h));\n        return ((p1 && p2) || !(p1 || p2)) ? h1[0] - h2[0] : p1 - p2;\n      });\n    }\n\n    return (\n      <main>\n        <header>\n          <h3>\n            <div className={'right big'}>\n              <span onClick={this.updateTime} style={{ lineHeight: '3rem' }}>{time}</span>\n            </div>\n            <div className={'table'}>\n              <span className={'block big'} onClick={this.nextPeriod}>{capitalize(period)}</span>\n              <span className={'big'}>â</span>\n              <span className={'block normal'} onClick={this.nextCampus}>{myCampus}</span>\n            </div>\n          </h3>\n        </header>\n        <section id=\"infos\" className={'table'}>\n          {(period === 'weekend')\n            ? (<div className={'card'}>\n              <div>Today is weekend!</div>\n              <div><Twemoji svg text={'There is no Shuttle â ğ ğ¢'} /></div>\n            </div>)\n            : myTrips.map((trip, i) => (<Trip\n              key={i}\n              isCurrent={isCurrentPeriod}\n              stations={trip.stations} />))}\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}