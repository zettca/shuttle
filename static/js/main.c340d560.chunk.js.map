{"version":3,"sources":["components/Trip.js","helpers.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Trip","stations","this","props","d","Date","time","hour","replace","ignoreStations","filteredStations","filter","st","indexOf","station","map","t","split","i","Number","done","getHours","getMinutes","react_default","a","createElement","className","concat","join","React","PureComponent","pad0","n","getTime","date","getISODate","getUTCFullYear","getUTCMonth","getUTCDate","getPeriodFromDates","dates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","da","value","_map","start","end","reverse","_map2","Object","slicedToArray","s1","s2","_map3","s","construct","toConsumableArray","_map4","d1","d2","type","err","return","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","store","get","state","campus","period","nextCampus","bind","assertThisInitialized","nextPeriod","updateTime","_this2","fetch","then","res","json","set","setState","campi","length","periods","_this$state","trips","str","myTrips","myCampus","onClick","style","lineHeight","charAt","toUpperCase","slice","id","lib","svg","text","trip","components_Trip","key","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_components_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c340d560.chunk.js","sourcesContent":["import React from 'react';\n\nclass Trip extends React.PureComponent {\n  render() {\n    const { stations } = this.props;\n    const d = new Date();\n\n    const time = stations[0].hour.replace(/\\./g, ':');\n\n    const ignoreStations = ['PraÃ§a de Londres', 'Sete-Rios'];\n    const filteredStations = stations\n      .filter(st => ignoreStations.indexOf(st.station) === -1)\n      .map(st => st.station);\n\n    const t = time.split(':').map(i => Number(i));\n    const done = d.getHours() > t[0] || (d.getHours() === t[0] && d.getMinutes() >= t[1]);\n\n    return (\n      <div className={`card${done ? ' done' : ''}`}>\n        <span className={'entry'}>\n          <strong>{time}</strong> {filteredStations.join(' > ')}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Trip;\n","export function pad0(n) {  // padding with 0\n  return n > 9 ? n : '0' + n;\n}\n\nexport function getTime(date) {\n  const d = date || new Date();\n  return [d.getHours(), d.getMinutes()].map(pad0).join(':');\n}\n\nexport function getISODate(date) {\n  const d = date || new Date();\n  return [d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate()].map(pad0).join('-');\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from 'react';\nimport store from 'store';\nimport { Twemoji } from 'react-emoji-render';\nimport Trip from './Trip';\nimport './App.css';\nimport { capitalize, getTime, getISODate } from '../helpers';\n\nconst URL = 'https://web.tecnico.ulisboa.pt/~ist178013/api/shuttle/';\n\nfunction getPeriodFromDates(dates) {\n  const date = new Date();\n\n  for (const da of dates) {\n    const [s1, s2] = [da.start, da.end].map(d => d.split('/').reverse().map(d => Number(d)));\n    s1[1]--;\n    s2[1]--;\n    const [d1, d2] = [s1, s2].map(s => new Date(...s));\n    if (date >= d1 && date <= d2) return da.type;\n  }\n\n  return 'weekend';\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const data = store.get('data');\n\n    this.state = {\n      date: getISODate(),\n      time: getTime(),\n      campus: 'Taguspark',\n      period: 'weekday', //getPeriod(), // day of week\n      data: data || undefined,\n    };\n\n    this.nextCampus = this.nextCampus.bind(this);\n    this.nextPeriod = this.nextPeriod.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n  }\n\n  componentDidMount() {\n    const { data } = this.state;\n\n    if (data === undefined) {\n      fetch(URL)\n        .then((res) => res.json())\n        .then((data) => {\n          store.set('data', data);\n          this.setState({ data, period: getPeriodFromDates(data.date) });\n        });\n    } else {\n      this.setState({ period: getPeriodFromDates(data.date) });\n    }\n  }\n\n  nextCampus() {\n    const { campus } = this.state;\n    const campi = ['Taguspark', 'Alameda'];\n    const i = ((campi.indexOf(campus) || 0) + 1) % campi.length;\n\n    this.setState({ campus: campi[i] });\n  }\n\n  nextPeriod() {\n    const { period } = this.state;\n    const periods = ['weekday', 'holidays', 'exams'];\n    const i = ((periods.indexOf(period) || 0) + 1) % periods.length;\n\n    this.setState({ period: periods[i] });\n  }\n\n  updateTime() {\n    this.setState({ time: getTime() });\n  }\n\n  render() {\n    const { data, time, campus, period } = this.state;\n    if (!data) return null;\n\n    const { trips } = data;\n    if (!trips) return null;\n\n    const myTrips = trips.filter(t => t.type === period && t.stations[0].station === campus);\n    const myCampus = (campus === 'Taguspark') ? 'Taguspark\\nAlameda' : 'Alameda\\nTaguspark';\n\n    return (\n      <main>\n        <header>\n          <h3>\n            <div className={'right big'}>\n              <span onClick={this.updateTime} style={{ lineHeight: '3rem' }}>{time}</span>\n            </div>\n            <div className={'table'}>\n              <span className={'block big'} onClick={this.nextPeriod}>{capitalize(period)}</span>\n              <span className={'big'}>â</span>\n              <span className={'block'} onClick={this.nextCampus}>{myCampus}</span>\n            </div>\n          </h3>\n        </header>\n        <section id=\"infos\" className={'table'}>\n          {(period === 'weekend')\n            ? (<div className={'card'}>\n              <div>Today is weekend!</div>\n              <div><Twemoji svg text={'There is no Shuttle â ð ð¢'} /></div>\n            </div>)\n            : myTrips.map((trip, i) => (<Trip key={i} stations={trip.stations} />))}\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}