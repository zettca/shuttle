{"version":3,"sources":["components/Trip.js","helpers.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Trip","_this$props","this","props","stations","useFilter","isDone","ignoreStations","time","hour","replace","filteredStations","filter","st","indexOf","station","map","join","react_default","a","createElement","className","concat","React","PureComponent","pad0","n","getTime","d","arguments","length","undefined","Date","getHours","getMinutes","getISODate","getUTCFullYear","getUTCMonth","getUTCDate","isPastTrip","date","timeToDate","timeString","t","split","min","sec","getFullYear","getMonth","getDate","hmsToDate","getPeriodFromDates","dates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","da","value","_map","start","end","reverse","Number","_map2","Object","slicedToArray","s1","s2","_map3","s","construct","toConsumableArray","_map4","d1","d2","type","err","return","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","store","get","state","campus","period","currentPeriod","nextCampus","bind","assertThisInitialized","nextPeriod","updateTime","_this2","fetch","then","res","json","set","setState","campi","i","periods","_this$state","trips","str","isCurrentPeriod","myCampus","myTrips","numPastTrips","reduce","acc","sort","trip1","trip2","_map5","_map6","_map7","_map8","p1","p2","onClick","style","lineHeight","charAt","toUpperCase","slice","id","lib","svg","text","trip","components_Trip","key","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_components_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fc3fd4b0.chunk.js","sourcesContent":["import React from 'react';\n\nclass Trip extends React.PureComponent {\n  render() {\n    const { stations, useFilter, isDone } = this.props;\n    const ignoreStations = ['PraÃ§a de Londres', 'Sete-Rios'];\n    const time = stations[0].hour.replace(/\\./g, ':');\n\n    // create trip-stops string\n    const filteredStations = stations\n      .filter(st => ignoreStations.indexOf(st.station) === -1)\n      .map(st => st.station)\n      .join(' > ')\n      .replace(/Taguspark/g, 'Tagus');\n\n    return (\n      <div className={`card${isDone && useFilter ? ' done' : ''}`}>\n        <span className={'entry'}>\n          <strong>{time}</strong> {filteredStations}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Trip;\n","export function pad0(n) {  // padding with 0\n  return n > 9 ? n : '0' + n;\n}\n\nexport function getTime(d = new Date()) {\n  return [d.getHours(), d.getMinutes()].map(pad0).join(':');\n}\n\nexport function getISODate(d = new Date()) {\n  return [d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate()].map(pad0).join('-');\n}\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function hmsToDate(hour = 0, min = 0, sec = 0) {\n  const d = new Date();\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), hour, min, sec);\n}\n\nexport function isPastTrip(date) {\n  return new Date() > date;\n}\n\nexport function timeToDate(timeString) {\n  const t = timeString.split(/:|\\./g);\n  return hmsToDate(t[0], t[1], t[2]);\n}","import React from 'react';\nimport store from 'store';\nimport { Twemoji } from 'react-emoji-render';\nimport Trip from './Trip';\nimport './App.css';\nimport { capitalize, getTime, getISODate, isPastTrip, timeToDate } from '../helpers';\n\nconst URL = 'https://web.tecnico.ulisboa.pt/~ist178013/api/shuttle/';\n\nfunction getPeriodFromDates(dates) {\n  const date = new Date();\n\n  for (const da of dates) {\n    const [s1, s2] = [da.start, da.end].map(d => d.split('/').reverse().map(d => Number(d)));\n    s1[1]--;\n    s2[1]--;\n    const [d1, d2] = [s1, s2].map(s => new Date(...s));\n    if (date >= d1 && date <= d2) return da.type;\n  }\n\n  return 'weekend';\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const data = store.get('data');\n\n    this.state = {\n      date: getISODate(),\n      time: getTime(),\n      campus: 'Taguspark',\n      period: 'weekday',\n      currentPeriod: undefined,\n      data: data || undefined,\n    };\n\n    this.nextCampus = this.nextCampus.bind(this);\n    this.nextPeriod = this.nextPeriod.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n  }\n\n  componentDidMount() {\n    const { data } = this.state;\n\n    if (data === undefined) {\n      fetch(URL)\n        .then((res) => res.json())\n        .then((data) => {\n          const period = getPeriodFromDates(data.date);\n          store.set('data', data);\n          this.setState({ data, period, currentPeriod: period });\n        });\n    } else {\n      const period = getPeriodFromDates(data.date);\n      this.setState({ period, currentPeriod: period });\n    }\n  }\n\n  nextCampus() {\n    const { campus } = this.state;\n    const campi = ['Taguspark', 'Alameda'];\n    const i = ((campi.indexOf(campus) || 0) + 1) % campi.length;\n\n    this.setState({ campus: campi[i] });\n  }\n\n  nextPeriod() {\n    const { period } = this.state;\n    const periods = ['weekday', 'holidays', 'exams'];\n    const i = ((periods.indexOf(period) || 0) + 1) % periods.length;\n\n    this.setState({ period: periods[i] });\n  }\n\n  updateTime() {\n    this.setState({ time: getTime() });\n  }\n\n  render() {\n    const { data, time, campus, period, currentPeriod } = this.state;\n    if (!data) return null;\n\n    const { trips } = data;\n    if (!trips) return null;\n\n    const isCurrentPeriod = period === currentPeriod;\n    const myCampus = (campus === 'Taguspark') ? 'Tagus\\nAlameda' : 'Alameda\\nTagus';\n    const myTrips = trips.filter(t => t.type === period && t.stations[0].station === campus);\n    const numPastTrips = trips.reduce((acc, t) => acc + isPastTrip(timeToDate(t.stations[0].hour)), 0);\n    const useFilter = numPastTrips > 0 && numPastTrips < myTrips.length;\n\n    if (isCurrentPeriod) {\n      myTrips.sort((trip1, trip2) => {\n        const [d1, d2] = [trip1, trip2].map(t => timeToDate(t.stations[0].hour));\n        const [p1, p2] = [d1, d2].map(d => isPastTrip(d));\n        return (p1 + p2 === 1) ? p1 - p2 : d1 - d2;\n      });\n    }\n\n    return (\n      <main>\n        <header>\n          <h3>\n            <div className={'right big'}>\n              <span onClick={this.updateTime} style={{ lineHeight: '3rem' }}>{time}</span>\n            </div>\n            <div className={'table'}>\n              <span className={'block big'} onClick={this.nextPeriod}>{capitalize(period)}</span>\n              <span className={'big'}>â</span>\n              <span className={'block normal'} onClick={this.nextCampus}>{myCampus}</span>\n            </div>\n          </h3>\n        </header>\n        <section id=\"infos\" className={'table'}>\n          {(period === 'weekend')\n            ? (<div className={'card'}>\n              <div>Today is weekend!</div>\n              <div><Twemoji svg text={'There is no Shuttle â ğ ğ¢'} /></div>\n            </div>)\n            : myTrips.map((trip, i) => (<Trip\n              key={i}\n              isDone={isPastTrip(timeToDate(time))}\n              useFilter={isCurrentPeriod && useFilter}\n              stations={trip.stations} />))}\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}