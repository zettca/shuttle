{"version":3,"sources":["components/Trip.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Trip","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","toggleExpanded","bind","assertThisInitialized","e","preventDefault","window","getSelection","removeAllRanges","setState","hour","replace","i","time","value","react_default","a","createElement","key","className","_this2","_this$props","props","stations","useFilter","isDone","ignoreStations","formatHour","stationsString","filter","st","indexOf","station","map","join","concat","onContextMenu","onDoubleClick","createEntry","React","Component","App","data","store","get","date","Date","campus","period","nextDate","nextCampus","updateDate","isPastTrip","fetch","then","res","json","set","prevProps","prevState","_this$state","getPeriodFromDates","dates","getDay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","d","_map","start","end","moment","_map2","slicedToArray","d1","d2","isBetween","type","err","return","setDate","getDate","campi","length","str","charAt","toUpperCase","slice","hr","_map3","m","minutes","hours","_map4","_this3","_this$state2","trips","myCampus","myTrips","t","numPastTrips","reduce","acc","isSame","sort","trip1","trip2","_map5","_map6","_map7","_map8","p1","p2","onClick","style","lineHeight","format","id","capitalize","lib","svg","text","trip","components_Trip","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_components_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4d530f36.chunk.js","sourcesContent":["import React from 'react';\n\nclass Trip extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      expanded: false,\n    };\n\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  toggleExpanded(e) {\n    e.preventDefault();\n    window.getSelection().removeAllRanges();\n\n    const { expanded } = this.state;\n    this.setState({ expanded: !expanded });\n  }\n\n  formatHour(hour) {\n    return hour.replace(/\\./g, ':');\n  }\n\n  createEntry(i, time, value) {\n    return (\n      <span key={i} className={'entry'}>\n        <strong>{time}</strong> {value}\n      </span>);\n  }\n\n  render() {\n    const { expanded } = this.state;\n    const { stations, useFilter, isDone } = this.props;\n    const ignoreStations = ['PraÃ§a de Londres', 'Sete-Rios'];\n    const time = this.formatHour(stations[0].hour);\n\n    // create trip-stops string\n    const stationsString = stations\n      .filter(st => ignoreStations.indexOf(st.station) === -1)\n      .map(st => st.station)\n      .join(' > ')\n      .replace(/Taguspark/g, 'Tagus');\n\n    return (\n      <div\n        className={`card${useFilter && isDone ? ' done' : ''}`}\n        onContextMenu={this.toggleExpanded}\n        onDoubleClick={this.toggleExpanded}>\n        {!expanded\n          ? this.createEntry(0, time, stationsString)\n          : stations.map((st, i) => this.createEntry(i, this.formatHour(st.hour), st.station))}\n      </div>\n    );\n\n  }\n}\n\nexport default Trip;\n","import React from 'react';\nimport store from 'store';\nimport moment from 'moment';\nimport { Twemoji } from 'react-emoji-render';\nimport Trip from './Trip';\nimport './App.css';\n\nconst URL = 'https://web.tecnico.ulisboa.pt/~ist178013/api/shuttle/';\nconst DAYOFF_NAME = 'weekend';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const data = store.get('data');\n\n    this.state = {\n      date: new Date(/*2019, 2, 4, 10, 10, 10*/),\n      campus: 'Taguspark',\n      period: 'weekday',\n      data: data,\n    };\n\n    this.nextDate = this.nextDate.bind(this);\n    this.nextCampus = this.nextCampus.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.isPastTrip = this.isPastTrip.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(URL)\n      .then((res) => res.json())\n      .then((data) => {\n        store.set('data', data);\n        this.setState({ data });\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { date, data } = this.state;\n\n    const period = this.getPeriodFromDates(date, data.date);\n    if (period !== prevState.period) {\n      this.setState({ period });\n    }\n  }\n\n  getPeriodFromDates(date, dates) {\n    if (dates == null) return null;\n    else if (date.getDay() % 6 === 0) return DAYOFF_NAME;\n\n    for (const d of dates) {\n      const [d1, d2] = [d.start, d.end].map(d => moment(d, 'DD/MM/YYYY'));\n      if (moment(date).isBetween(d1, d2, 'day', '[]')) return d.type;\n    }\n\n    return DAYOFF_NAME;\n  }\n\n  nextDate() {\n    const { date } = this.state;\n    date.setDate(date.getDate() + 1);\n    this.setState({ date });\n  }\n\n  nextCampus() {\n    const { campus } = this.state;\n    const campi = ['Taguspark', 'Alameda'];\n    const i = ((campi.indexOf(campus) || 0) + 1) % campi.length;\n\n    this.setState({ campus: campi[i] });\n  }\n\n  updateDate() {\n    this.setState({ date: new Date() });\n  }\n\n  capitalize(str) {\n    return str && str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  isPastTrip(hr) {\n    const { date } = this.state;\n\n    const [min1, min2] = [moment(date), moment(hr, 'HH:mm')].map(m => m.minutes() + m.hours() * 60);\n    return min1 > min2;\n  }\n\n  render() {\n    const { data, date, campus, period } = this.state;\n    if (!data || !data.trips) return null;\n\n    const { trips } = data;\n\n    const myCampus = (campus === 'Taguspark') ? ['Tagus', 'Alameda'] : ['Alameda', 'Tagus'];\n    const myTrips = trips.filter(t => t.type === period && t.stations[0].station === campus);\n\n    const numPastTrips = myTrips.reduce((acc, t) => acc + this.isPastTrip(t.stations[0].hour), 0);\n    const useFilter = moment().isSame(date, 'day') && numPastTrips > 0 && numPastTrips < myTrips.length;\n\n    myTrips.sort((trip1, trip2) => {\n      const [d1, d2] = [trip1, trip2].map(t => moment(t.stations[0].hour, 'HH:mm'));\n      const [p1, p2] = [d1, d2].map(d => this.isPastTrip(d));\n      return (useFilter && p1 + p2 === 1) ? p1 - p2 : d1 - d2;\n    });\n\n    return (\n      <main>\n        <header>\n          <h3>\n            <div className='right big'>\n              <span onClick={this.updateDate} style={{ lineHeight: '3rem' }}>{moment(date).format('HH:mm')}</span>\n            </div>\n            <div className='table'>\n              <span id='title' onClick={this.nextDate}>\n                <div className='big'>{moment(date).format('ddd, D MMM')}</div>\n                <div>{this.capitalize(period)}</div>\n              </span>\n              <span id='campus' className='table' onClick={this.nextCampus}>\n                <span className='big'>â</span>\n                <span>{myCampus.join('\\n')}</span>\n              </span>\n            </div>\n          </h3>\n        </header>\n        <section id=\"infos\" className='table'>\n          {(period === DAYOFF_NAME)\n            ? (<div className='card center'>\n              <div>There is no Shuttle for this day!</div>\n              <div className='big'><Twemoji svg text={'â ð ð¢ ð­'} /></div>\n            </div>)\n            : myTrips.map((trip, i) => (<Trip key={i} stations={trip.stations}\n              isDone={this.isPastTrip(trip.stations[0].hour)}\n              useFilter={useFilter} />))}\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}